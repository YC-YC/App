/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.goodocom.rk;

public final class R {
    public static final class array {
        public static final int incoming_call_widget_2way_direction_descriptions=0x7f040006;
        public static final int incoming_call_widget_2way_target_descriptions=0x7f040005;
        /**  But in some cases "Respond via SMS" isn't available, so there are
         only 2 choices:
         - Answer (drag right)
         - Reject (drag left) 
         */
        public static final int incoming_call_widget_2way_targets=0x7f040004;
        public static final int incoming_call_widget_3way_direction_descriptions=0x7f040003;
        public static final int incoming_call_widget_3way_target_descriptions=0x7f040002;
        public static final int incoming_call_widget_3way_targets=0x7f040001;
        /**  Used in app/dialog examples 
         */
        public static final int select_dialog_items=0x7f040000;
    }
    public static final class attr {
        /**  Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int allowScaling=0x7f010013;
        /**  Used when the handle shouldn't wait to be hit before following the finger 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int alwaysTrackFinger=0x7f010012;
        /**  The change / update button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int changeNumButtonText=0x7f010002;
        /**  The confirm button mode. 
         <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>confirm</code></td><td>0</td><td> Traditional single action "ok" button. </td></tr>
<tr><td><code>activation</code></td><td>1</td><td> Two state "enable/disable" button. </td></tr>
</table>
         */
        public static final int confirmMode=0x7f010003;
        /**  Reference to an array resource that be used to announce the directions with targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int directionDescriptions=0x7f010008;
        /**  The disable button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int disableButtonText=0x7f010001;
        /**  The enable button text. 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int enableButtonText=0x7f010000;
        /**  Number of waves/chevrons to show in animation. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int feedbackCount=0x7f010011;
        /**  Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int glowRadius=0x7f01000e;
        /**  Sets a drawable as the center. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int handleDrawable=0x7f010009;
        /**  Inner radius of glow area. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int innerRadius=0x7f01000c;
        /**  Outer radius of glow area. Target icons will be drawn on this circle. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int outerRadius=0x7f01000d;
        /**  Drawable to use for wave ripple animation. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int outerRingDrawable=0x7f01000a;
        /**  Drawble used for drawing points 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int pointDrawable=0x7f01000b;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unconditional</code></td><td>0</td><td> unconditional  </td></tr>
<tr><td><code>busy</code></td><td>1</td><td> busy </td></tr>
<tr><td><code>no_reply</code></td><td>2</td><td> no_reply </td></tr>
<tr><td><code>not_reachable</code></td><td>3</td><td> not_reachable </td></tr>
</table>
         */
        public static final int reason=0x7f010005;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>1</td><td> voice </td></tr>
<tr><td><code>data</code></td><td>2</td><td> data </td></tr>
</table>
         */
        public static final int serviceClass=0x7f010004;
        /**  How close we need to be before snapping to a target. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int snapMargin=0x7f010010;
        /**  Reference to an array resource that be used as description for the targets around the circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDescriptions=0x7f010007;
        /**  Reference to an array resource that be shown as targets around a circle. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static final int targetDrawables=0x7f010006;
        /**  Tactile feedback duration for actions. Set to '0' for no vibration. 
         <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int vibrationDuration=0x7f01000f;
    }
    public static final class color {
        public static final int black=0x7f060000;
        public static final int darker_gray=0x7f060004;
        /**  white 
 DTMF Dialer 
         */
        public static final int dtmf_dialer_display_text=0x7f060009;
        /**  In-call UI 
         */
        public static final int incall_callTypeSip=0x7f060005;
        /**  green 
         */
        public static final int incall_call_banner_background=0x7f060006;
        /**  semitransparent blueish grey 
         */
        public static final int incall_call_banner_text_color=0x7f060008;
        /**  semitransparent black 
         */
        public static final int incall_secondary_info_background=0x7f060007;
        public static final int lighter_gray=0x7f060003;
        /**  Used with some smaller texts in manage conference screen. 
         */
        public static final int manage_conference_secondary_text_color=0x7f06000c;
        /**  Put on top of each photo, implying 80% darker than usual. 
         */
        public static final int on_hold_dim_effect=0x7f06000b;
        /**  white 
 Color of the theme of the People app 
         */
        public static final int people_app_theme_color=0x7f06000a;
        public static final int phone_settings_actionbar_color=0x7f06000e;
        /**  Settings screen should use the same colors as the Dialer 
         */
        public static final int phone_settings_background_color=0x7f06000d;
        public static final int snow=0x7f060001;
        public static final int white=0x7f060002;
    }
    public static final class dimen {
        /**  Default screen margins, per the Android Design guidelines. 

         Customize dimensions originally defined in res/values/dimens.xml (such as
         screen margins) for sw720dp devices (e.g. 10" tablets) in landscape here.
    
         */
        public static final int activity_horizontal_margin=0x7f070000;
        public static final int activity_vertical_margin=0x7f070001;
        /**  Padding at the left and right edges of the incall_touch_ui button
         cluster.  This padding is necessary because we can't allow the
         buttons to be very close to the edges of the screen, due to the
         risk of false touches (from your finger wrapping around while
         holding the phone, *before* moving it up to your face and having
         the prox sensor kick in.) 
         */
        public static final int button_cluster_side_padding=0x7f07000c;
        /**  Height of the "call banner" overlay on top of the upper part of
         the call info area. 
         */
        public static final int call_banner_height=0x7f070002;
        /**  Right padding for name and number fields in the call banner.
         This padding is used to ensure that ultra-long names or
         numbers won't overlap the elapsed time indication. 
         */
        public static final int call_banner_name_number_right_padding=0x7f070007;
        /**  Padding at the left and right edges of the "call banner". 
         */
        public static final int call_banner_side_padding=0x7f070004;
        /**  Padding at the top and bottom edges of the "call banner". 
         */
        public static final int call_banner_top_bottom_padding=0x7f070005;
        public static final int dialpad_button_margin=0x7f070016;
        public static final int dialpad_center_margin=0x7f070015;
        public static final int dialpad_digits_text_size=0x7f070012;
        /**  Dimensions for Emergency Dialer and dialpad inside the in-call screen 
         */
        public static final int dialpad_horizontal_margin=0x7f070010;
        public static final int dialpad_vertical_margin=0x7f070011;
        public static final int dialpad_vertical_margin_left=0x7f070013;
        /**  Just used in landscape mode 
         */
        public static final int emergency_dialer_digits_height=0x7f070014;
        /**  Height of buttons in the extra button row. 
         */
        public static final int extra_row_button_height=0x7f07000b;
        /**  Width of buttons in the extra button row. 
         */
        public static final int extra_row_button_width=0x7f07000a;
        /**  Default glow radius for GlowPadView 
         */
        public static final int glowpadview_glow_radius=0x7f07001c;
        /**  Default distance from each snap target that GlowPadView considers a "hit" 
         */
        public static final int glowpadview_inner_radius=0x7f07001e;
        public static final int glowpadview_margin_bottom=0x7f07001f;
        public static final int glowpadview_margin_right=0x7f070020;
        /**  Dimension used to possibly down-scale high-res photo into what is suitable
         for notification's large icon. 
 Circle size for incoming call widget's each item. 
 Margin used for incoming call widget's icon for each item.
         This should be same as "(incoming_call_widget_circle_size - icon_size)/2".
         Right now answer/decline/reject icons have 38dp width/height.
         So, (94 - 38)/2 ==> 28dp 
 Size of alarm alert outer ring. 
         */
        public static final int glowpadview_outerring_diameter=0x7f07001a;
        /**  Default distance beyond which GlowPadView snaps to the matching target 
         */
        public static final int glowpadview_snap_margin=0x7f07001d;
        /**  Default target placement radius for GlowPadView. Should be 1/2 of outerring diameter. 
         */
        public static final int glowpadview_target_placement_radius=0x7f07001b;
        /**  Height of the main row of in-call buttons. 
         */
        public static final int in_call_button_height=0x7f070008;
        /**  Height of the in-call "End" button. Match with Contact's dimens/call_button_height 
         */
        public static final int in_call_end_button_height=0x7f070009;
        /**  Margin between the bottom of the "call card" photo
         and the top of the in-call button cluster. 
         */
        public static final int in_call_touch_ui_upper_margin=0x7f070003;
        /**  Margin used for incoming call widget's icon for each item.
         This should be same as "(incoming_call_widget_circle_size - icon_size)/2".
         Right now answer/decline/reject icons have 38dp width/height.
         So, (94 - 38)/2 ==> 28dp 
         */
        public static final int incoming_call_widget_asset_margin=0x7f070019;
        /**  Circle size for incoming call widget's each item. 
         */
        public static final int incoming_call_widget_circle_size=0x7f070018;
        /**  Dimension used to possibly down-scale high-res photo into what is suitable
         for notification's large icon. 
         */
        public static final int notification_icon_size=0x7f070017;
        /**  Dimensions for OTA Call Card 
         */
        public static final int otaactivate_layout_marginTop=0x7f07000d;
        public static final int otalistenprogress_layout_marginTop=0x7f07000e;
        public static final int otasuccessfail_layout_marginTop=0x7f07000f;
        /**  Padding at the top and bottom edges of the "provider information" 
         */
        public static final int provider_info_top_bottom_padding=0x7f070006;
    }
    public static final class drawable {
        public static final int bt_setting_rl=0x7f020000;
        public static final int btn_radio=0x7f020001;
        public static final int btn_radio_on=0x7f020002;
        public static final int btn_radio_on_pressed=0x7f020003;
        public static final int btphone_calls=0x7f020004;
        public static final int call_contact=0x7f020005;
        public static final int dial_background_texture=0x7f020006;
        public static final int dial_num_0_no_plus_wht=0x7f020007;
        public static final int dial_num_1_no_vm_wht=0x7f020008;
        public static final int dial_num_2_wht=0x7f020009;
        public static final int dial_num_3_wht=0x7f02000a;
        public static final int dial_num_4_wht=0x7f02000b;
        public static final int dial_num_5_wht=0x7f02000c;
        public static final int dial_num_6_wht=0x7f02000d;
        public static final int dial_num_7_wht=0x7f02000e;
        public static final int dial_num_8_wht=0x7f02000f;
        public static final int dial_num_9_wht=0x7f020010;
        public static final int dial_num_pound_wht=0x7f020011;
        public static final int dial_num_star_wht=0x7f020012;
        public static final int dialpad_background=0x7f020013;
        public static final int ic_bluetooth=0x7f020014;
        public static final int ic_bt_cellphone=0x7f020015;
        public static final int ic_bt_config=0x7f020016;
        public static final int ic_call_log=0x7f020017;
        public static final int ic_call_phone=0x7f020018;
        public static final int ic_calllog_in=0x7f020019;
        public static final int ic_calllog_incomming_active=0x7f02001a;
        public static final int ic_calllog_missed=0x7f02001b;
        public static final int ic_calllog_missed_voip_pre=0x7f02001c;
        public static final int ic_calllog_out=0x7f02001d;
        public static final int ic_calllog_outgoing_active=0x7f02001e;
        public static final int ic_contacts=0x7f02001f;
        public static final int ic_device_icon=0x7f020020;
        public static final int ic_dial_action_delete=0x7f020021;
        public static final int ic_dialog_dialer=0x7f020022;
        public static final int ic_disconnect_bt=0x7f020023;
        public static final int ic_home_search_normal_holo=0x7f020024;
        public static final int ic_in_call_phone_hangup=0x7f020025;
        public static final int ic_in_call_touch_handle=0x7f020026;
        public static final int ic_in_call_touch_handle_normal=0x7f020027;
        public static final int ic_launcher=0x7f020028;
        public static final int ic_lockscreen_answer=0x7f020029;
        public static final int ic_lockscreen_answer_activated=0x7f02002a;
        public static final int ic_lockscreen_answer_activated_layer=0x7f02002b;
        public static final int ic_lockscreen_answer_normal=0x7f02002c;
        public static final int ic_lockscreen_answer_normal_layer=0x7f02002d;
        public static final int ic_lockscreen_decline=0x7f02002e;
        public static final int ic_lockscreen_decline_activated=0x7f02002f;
        public static final int ic_lockscreen_decline_activated_layer=0x7f020030;
        public static final int ic_lockscreen_decline_normal=0x7f020031;
        public static final int ic_lockscreen_decline_normal_layer=0x7f020032;
        public static final int ic_lockscreen_text=0x7f020033;
        public static final int ic_lockscreen_text_activated_layer=0x7f020034;
        public static final int ic_lockscreen_text_normal_layer=0x7f020035;
        public static final int ic_media_next=0x7f020036;
        public static final int ic_media_pause=0x7f020037;
        public static final int ic_media_play=0x7f020038;
        public static final int ic_media_previous=0x7f020039;
        public static final int ic_music=0x7f02003a;
        public static final int ic_music_cd=0x7f02003b;
        public static final int ic_phone_call_log=0x7f02003c;
        public static final int ic_phonebook_people=0x7f02003d;
        public static final int ic_search=0x7f02003e;
        public static final int ic_settings=0x7f02003f;
        public static final int ic_settings_nfc=0x7f020040;
        public static final int ic_settings_notifications=0x7f020041;
        public static final int ic_sysbar_back=0x7f020042;
        public static final int ic_sysbar_home=0x7f020043;
        public static final int ic_text_holo_dark=0x7f020044;
        public static final int ic_voice_search=0x7f020045;
        public static final int ic_volume_small=0x7f020046;
        public static final int people=0x7f020047;
        public static final int stat_notify_chat=0x7f020048;
        public static final int volume_down=0x7f020049;
        public static final int volume_up=0x7f02004a;
    }
    public static final class id {
        public static final int ComingPhone=0x7f050030;
        public static final int ComingPhone_name=0x7f050031;
        public static final int ComingPhone_num=0x7f050032;
        public static final int DeviceListView=0x7f05003c;
        public static final int DialActivity_dial=0x7f05000f;
        public static final int DialActivity_hangup=0x7f050012;
        public static final int DialActivity_phoneAnswer=0x7f050013;
        public static final int DialActivity_phoneTransfer=0x7f050011;
        public static final int DialActivity_phoneTransferBack=0x7f050010;
        public static final int LinearLayout1=0x7f050008;
        public static final int Music_Last=0x7f05001c;
        public static final int Music_Next=0x7f05001e;
        public static final int Music_PlayOrPause=0x7f05001d;
        public static final int Music_ctl=0x7f050019;
        public static final int Music_volume_down=0x7f05001b;
        public static final int Music_volume_up=0x7f05001f;
        public static final int action_settings=0x7f05008f;
        public static final int activation=0x7f050001;
        public static final int answerFragment=0x7f050073;
        public static final int auto_connect=0x7f050041;
        public static final int bluetoothsettingFragment=0x7f050071;
        public static final int bt_back=0x7f050083;
        public static final int bt_call=0x7f05007e;
        public static final int bt_call_in=0x7f050057;
        public static final int bt_call_missed=0x7f050059;
        public static final int bt_call_out=0x7f050058;
        public static final int bt_dialer=0x7f05007d;
        public static final int bt_home=0x7f05007c;
        public static final int bt_phone_contact=0x7f05007f;
        public static final int bt_phone_nfc=0x7f050081;
        public static final int bt_phone_ring=0x7f050080;
        public static final int bt_phone_settings=0x7f050082;
        public static final int btaddr=0x7f05005e;
        public static final int btdeviceaddr=0x7f050044;
        public static final int btdevicename=0x7f050042;
        public static final int btname=0x7f05005d;
        public static final int busy=0x7f050005;
        public static final int button1=0x7f050014;
        public static final int button10=0x7f050009;
        public static final int button2=0x7f050015;
        public static final int button21=0x7f050021;
        public static final int button3=0x7f050016;
        public static final int button31=0x7f050023;
        public static final int button32=0x7f050024;
        public static final int button33=0x7f050025;
        public static final int button34=0x7f050026;
        public static final int button35=0x7f050027;
        public static final int button4=0x7f050018;
        public static final int button6=0x7f05000c;
        public static final int button7=0x7f05000d;
        public static final int button8=0x7f05000b;
        public static final int button9=0x7f05000a;
        public static final int callFragment=0x7f050076;
        public static final int callLogCallInFragment=0x7f050053;
        public static final int callLogCallMissFragment=0x7f050055;
        public static final int callLogCallOutFragment=0x7f050054;
        public static final int callLogFragment=0x7f050077;
        public static final int call_icon=0x7f050088;
        public static final int call_log_listView=0x7f05005a;
        public static final int call_log_name=0x7f050085;
        public static final int call_log_num=0x7f050086;
        public static final int call_log_time=0x7f050087;
        public static final int call_logtype_image=0x7f050084;
        public static final int call_people=0x7f05004f;
        public static final int call_people_num=0x7f050050;
        public static final int call_status=0x7f05004d;
        public static final int calldialButton=0x7f050046;
        public static final int calldigits=0x7f05004b;
        public static final int calldigits_container=0x7f05004a;
        public static final int callhandupButton=0x7f050047;
        public static final int calllog_button21=0x7f050079;
        public static final int calllog_listView2=0x7f05007a;
        public static final int calllog_lost_panel=0x7f050056;
        public static final int calllog_searchEt=0x7f050078;
        public static final int callmic_muteButton=0x7f050048;
        public static final int callmiss_log_name=0x7f050089;
        public static final int callmiss_log_num=0x7f05008a;
        public static final int callmiss_log_time=0x7f05008b;
        public static final int callout_log_name=0x7f05008c;
        public static final int callout_log_num=0x7f05008d;
        public static final int callout_log_time=0x7f05008e;
        public static final int callphone_container=0x7f050045;
        public static final int callspeaker_muteButton=0x7f050049;
        public static final int chronometer=0x7f05004e;
        public static final int confirm=0x7f050000;
        public static final int connect_Button=0x7f050038;
        public static final int connect_state=0x7f050043;
        public static final int data=0x7f050003;
        public static final int deleteButton=0x7f05004c;
        public static final int device_list_info=0x7f05003a;
        public static final int device_name=0x7f05003e;
        public static final int device_name_tx=0x7f05003d;
        public static final int devicelistFragment=0x7f050070;
        public static final int devicename_edit=0x7f05002d;
        public static final int dialButton=0x7f05005f;
        public static final int dialpad=0x7f050051;
        public static final int dialpadFragment=0x7f050072;
        public static final int digits=0x7f050063;
        public static final int digits_container=0x7f050039;
        public static final int disconnect_Button=0x7f050037;
        public static final int editText1=0x7f05000e;
        public static final int editText31=0x7f050028;
        public static final int editText32=0x7f050029;
        public static final int editText33=0x7f05002a;
        public static final int editText34=0x7f05002b;
        public static final int editText35=0x7f05002c;
        public static final int eight=0x7f05006b;
        public static final int entry_panel=0x7f05007b;
        public static final int five=0x7f050068;
        public static final int four=0x7f050067;
        public static final int glow_layout=0x7f05002f;
        public static final int glow_pad_view=0x7f050033;
        public static final int handupButton=0x7f050060;
        public static final int imageView1=0x7f05001a;
        public static final int listView1=0x7f050017;
        public static final int listView2=0x7f050022;
        public static final int list_Button=0x7f050035;
        public static final int mic_muteButton=0x7f050061;
        public static final int musicPlayFragment=0x7f050074;
        public static final int nine=0x7f05006c;
        public static final int no_reply=0x7f050006;
        public static final int not_reachable=0x7f050007;
        public static final int one=0x7f050064;
        public static final int phoneBookFragment=0x7f050075;
        public static final int phone_container=0x7f050034;
        public static final int phone_name=0x7f05005b;
        public static final int phone_num=0x7f05005c;
        public static final int phone_text_layout=0x7f05002e;
        public static final int pin_code=0x7f050040;
        public static final int pin_password_tx=0x7f05003f;
        public static final int pound=0x7f05006f;
        public static final int scan_Button=0x7f050036;
        public static final int searchEt=0x7f050020;
        public static final int searching_device=0x7f05003b;
        public static final int seven=0x7f05006a;
        public static final int six=0x7f050069;
        public static final int speaker_muteButton=0x7f050062;
        public static final int star=0x7f05006d;
        public static final int three=0x7f050066;
        public static final int top=0x7f050052;
        public static final int two=0x7f050065;
        public static final int unconditional=0x7f050004;
        public static final int voice=0x7f050002;
        public static final int zero=0x7f05006e;
    }
    public static final class integer {
        public static final int dialpad_layout_weight_additional_buttons=0x7f080002;
        public static final int dialpad_layout_weight_dialpad=0x7f080001;
        /**  Layout weight values for dialpad screen. These layouts will be used in one
         LinearLayout (dialpad_fragment.xml), configuring dialpad screen's vertical
         ratio. 
         */
        public static final int dialpad_layout_weight_digits=0x7f080000;
    }
    public static final class layout {
        public static final int activity_blue_toot_sevice=0x7f030000;
        public static final int activity_dial=0x7f030001;
        public static final int activity_main=0x7f030002;
        public static final int activity_music=0x7f030003;
        public static final int activity_phone_book=0x7f030004;
        public static final int activity_setting=0x7f030005;
        public static final int alert_dialog_text_entry=0x7f030006;
        public static final int answer_fragment=0x7f030007;
        public static final int bt_list_card=0x7f030008;
        public static final int bt_setting_card=0x7f030009;
        public static final int btdevices=0x7f03000a;
        public static final int call_fragment=0x7f03000b;
        public static final int call_log_fragment=0x7f03000c;
        public static final int call_log_list_button=0x7f03000d;
        public static final int call_log_main_layout=0x7f03000e;
        public static final int contacts=0x7f03000f;
        public static final int devices=0x7f030010;
        public static final int dialpad=0x7f030011;
        public static final int main_dialer=0x7f030012;
        public static final int phone_call_log=0x7f030013;
        public static final int sim_ndp=0x7f030014;
        public static final int single_call_log=0x7f030015;
        public static final int single_call_miss_log=0x7f030016;
        public static final int single_call_out_log=0x7f030017;
    }
    public static final class menu {
        public static final int blue_toot_sevice=0x7f0b0000;
        public static final int dial=0x7f0b0001;
        public static final int music=0x7f0b0002;
        public static final int phone_book=0x7f0b0003;
        public static final int setting=0x7f0b0004;
    }
    public static final class string {
        /**  Description of CallLog Fragment. [CHAR LIMIT=NONE] 
         */
        public static final int Call_in_title=0x7f090046;
        public static final int Call_miss_title=0x7f090048;
        public static final int Call_out_title=0x7f090047;
        public static final int Call_over=0x7f090043;
        public static final int Call_people=0x7f090044;
        public static final int Call_people_num=0x7f090045;
        /**  Description of Call Fragment. [CHAR LIMIT=NONE] 
         */
        public static final int Call_status=0x7f090041;
        public static final int Call_talk=0x7f090042;
        /**  Description of Anwser Fragment. [CHAR LIMIT=NONE] 
         */
        public static final int Coming_info=0x7f09003e;
        public static final int Device_Auto_Connect=0x7f09003b;
        public static final int Device_Searching=0x7f09003d;
        public static final int Device_disconnect=0x7f09003c;
        /**  Description of Device list. [CHAR LIMIT=NONE] 
         */
        public static final int Device_list_info=0x7f090038;
        public static final int Device_searching=0x7f090039;
        /**  Description of DialActivity. [CHAR LIMIT=NONE] 
         */
        public static final int DialActivity_dial=0x7f09002d;
        public static final int DialActivity_hangup=0x7f09002e;
        public static final int DialActivity_phoneAnswer=0x7f09002f;
        public static final int DialActivity_phoneTransfer=0x7f090030;
        public static final int DialActivity_phoneTransferBack=0x7f090031;
        public static final int Music_Last=0x7f090035;
        public static final int Music_Next=0x7f090034;
        /**  Description of Music. [CHAR LIMIT=NONE] 
         */
        public static final int Music_Play=0x7f090032;
        public static final int Music_Stop=0x7f090033;
        public static final int Phone_name=0x7f09003f;
        public static final int Phone_num=0x7f090040;
        public static final int Search_Device=0x7f09003a;
        public static final int Update_Call_Log=0x7f090037;
        /**  Description of PhoneBook. [CHAR LIMIT=NONE] 
         */
        public static final int Update_phone=0x7f090036;
        public static final int action_settings=0x7f090001;
        public static final int alert_dialog_cancel=0x7f09001d;
        /**  Title of the alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int alert_dialog_close=0x7f09001b;
        /**  Title of the button to show in a alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int alert_dialog_ok=0x7f09001c;
        public static final int app_name=0x7f090000;
        public static final int auto_answer=0x7f090023;
        public static final int auto_connect=0x7f090022;
        public static final int auto_connect_info=0x7f090026;
        public static final int auto_connet_info=0x7f09004e;
        /**  info of activity. [CHAR LIMIT=NONE] 
         */
        public static final int bt_connect_info=0x7f090049;
        public static final int bt_disconnect_info=0x7f09004a;
        /**  Title of the button to show in a alert dialog. [CHAR LIMIT=NONE] 
         */
        public static final int close_profile=0x7f09001e;
        public static final int custom_message_cancel=0x7f09002b;
        public static final int custom_message_send=0x7f09002c;
        /**  String describing the Delete/Backspace ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_delete_button=0x7f090016;
        /**  String describing the Dial ImageButton

         Used by AccessibilityService to announce the purpose of the button.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_dial_button=0x7f090015;
        /**  String describing the image on ImageButton eight

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_eight=0x7f090010;
        /**  String describing the image on ImageButton five

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_five=0x7f09000d;
        /**  String describing the image on ImageButton four

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_four=0x7f09000c;
        /**  String describing the image on ImageButton nine

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_nine=0x7f090011;
        /**  String describing the image on ImageButton one

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_one=0x7f090009;
        /**  String describing the image on ImageButton pound

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_pound=0x7f090014;
        /**  String describing the image on ImageButton seven

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_seven=0x7f09000f;
        /**  String describing the image on ImageButton six

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_six=0x7f09000e;
        /**  String describing the image on ImageButton star

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_star=0x7f090012;
        /**  String describing the image on ImageButton three

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_three=0x7f09000b;
        /**  String describing the image on ImageButton two

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_two=0x7f09000a;
        /**  String describing the image on ImageButton zero

         Note: AccessibilityServices use this attribute to announce what the view represents.
               This is especially valuable for views without textual representation like ImageView.
         [CHAR LIMIT=NONE]
    
         */
        public static final int description_image_button_zero=0x7f090013;
        /**  Description of the answer target in the Slide unlock screen of Phone. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_answer=0x7f090027;
        /**  Description of the decline on target in the Slide unlock screen. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_decline=0x7f090029;
        /**  Description of the send_sms target in the Slide unlock screen of Phone. [CHAR LIMIT=NONE] 
         */
        public static final int description_target_send_sms=0x7f090028;
        public static final int device_connected=0x7f090053;
        public static final int device_disconnected=0x7f090054;
        public static final int device_name=0x7f090020;
        public static final int device_name_info=0x7f090024;
        /**  Emergency dialer: message displayed in an error dialog 
         */
        public static final int dial_emergency_empty_error=0x7f090018;
        /**  Dialer text on Emergency Dialer 
 Emergency dialer: message displayed in an error dialog 
         */
        public static final int dial_emergency_error=0x7f090017;
        public static final int disconnet_info=0x7f09004d;
        /**  Status message for the "radio enable" UI for emergency calls 
         */
        public static final int emergency_enable_radio_dialog_message=0x7f09001a;
        /**  Dialog title for the "radio enable" UI for emergency calls 
         */
        public static final int emergency_enable_radio_dialog_title=0x7f090019;
        public static final int hello_world=0x7f090002;
        public static final int mic_off_info=0x7f090050;
        public static final int mic_on_info=0x7f09004f;
        public static final int no_device_connected=0x7f090055;
        /**  Positive button label ("OK") used in several dialogs in the phone UI [CHAR LIMIT=10] 
         */
        public static final int ok=0x7f09001f;
        public static final int phone_hangup_info=0x7f09004c;
        public static final int phone_name_info=0x7f09004b;
        public static final int pin_password=0x7f090021;
        public static final int pin_password_info=0x7f090025;
        /**  Description of AnswerFragment. [CHAR LIMIT=NONE] 
         */
        public static final int respond_via_sms_custom_message=0x7f09002a;
        public static final int speaker_off_info=0x7f090052;
        public static final int speaker_on_info=0x7f090051;
        public static final int title_activity_blue_toot_sevice=0x7f090007;
        public static final int title_activity_call_log=0x7f090003;
        public static final int title_activity_dial=0x7f090004;
        public static final int title_activity_music=0x7f090005;
        public static final int title_activity_service=0x7f090006;
        public static final int title_activity_setting=0x7f090008;
    }
    public static final class style {
        /** 
        Base application theme, dependent on API level. This theme is replaced
        by AppBaseTheme from res/values-vXX/styles.xml on newer devices.
    

            Theme customizations available in newer API levels can go in
            res/values-vXX/styles.xml, while customizations related to
            backward-compatibility can go here.
        
         */
        public static final int AppBaseTheme=0x7f0a0000;
        /**  Application theme. 
 All customizations that are NOT specific to a particular API-level can go here. 
         */
        public static final int AppTheme=0x7f0a0001;
        public static final int DialpadButtonStyle=0x7f0a0002;
        public static final int DialtactsDigitsTextAppearance=0x7f0a0003;
    }
    public static final class styleable {
        /** Attributes that can be used with a CallForwardEditPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CallForwardEditPreference_reason com.goodocom.rk:reason}</code></td><td></td></tr>
           <tr><td><code>{@link #CallForwardEditPreference_serviceClass com.goodocom.rk:serviceClass}</code></td><td></td></tr>
           </table>
           @see #CallForwardEditPreference_reason
           @see #CallForwardEditPreference_serviceClass
         */
        public static final int[] CallForwardEditPreference = {
            0x7f010004, 0x7f010005
        };
        /**
          <p>This symbol is the offset where the {@link com.goodocom.rk.R.attr#reason}
          attribute's value can be found in the {@link #CallForwardEditPreference} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>unconditional</code></td><td>0</td><td> unconditional  </td></tr>
<tr><td><code>busy</code></td><td>1</td><td> busy </td></tr>
<tr><td><code>no_reply</code></td><td>2</td><td> no_reply </td></tr>
<tr><td><code>not_reachable</code></td><td>3</td><td> not_reachable </td></tr>
</table>
          @attr name com.goodocom.rk:reason
        */
        public static final int CallForwardEditPreference_reason = 1;
        /**
          <p>This symbol is the offset where the {@link com.goodocom.rk.R.attr#serviceClass}
          attribute's value can be found in the {@link #CallForwardEditPreference} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>voice</code></td><td>1</td><td> voice </td></tr>
<tr><td><code>data</code></td><td>2</td><td> data </td></tr>
</table>
          @attr name com.goodocom.rk:serviceClass
        */
        public static final int CallForwardEditPreference_serviceClass = 0;
        /** Attributes that can be used with a EditPhoneNumberPreference.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_changeNumButtonText com.goodocom.rk:changeNumButtonText}</code></td><td> The change / update button text.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_confirmMode com.goodocom.rk:confirmMode}</code></td><td> The confirm button mode.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_disableButtonText com.goodocom.rk:disableButtonText}</code></td><td> The disable button text.</td></tr>
           <tr><td><code>{@link #EditPhoneNumberPreference_enableButtonText com.goodocom.rk:enableButtonText}</code></td><td> The enable button text.</td></tr>
           </table>
           @see #EditPhoneNumberPreference_changeNumButtonText
           @see #EditPhoneNumberPreference_confirmMode
           @see #EditPhoneNumberPreference_disableButtonText
           @see #EditPhoneNumberPreference_enableButtonText
         */
        public static final int[] EditPhoneNumberPreference = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003
        };
        /**
          <p>
          @attr description
           The change / update button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:changeNumButtonText
        */
        public static final int EditPhoneNumberPreference_changeNumButtonText = 2;
        /**
          <p>
          @attr description
           The confirm button mode. 


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>confirm</code></td><td>0</td><td> Traditional single action "ok" button. </td></tr>
<tr><td><code>activation</code></td><td>1</td><td> Two state "enable/disable" button. </td></tr>
</table>
          <p>This is a private symbol.
          @attr name com.goodocom.rk:confirmMode
        */
        public static final int EditPhoneNumberPreference_confirmMode = 3;
        /**
          <p>
          @attr description
           The disable button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:disableButtonText
        */
        public static final int EditPhoneNumberPreference_disableButtonText = 1;
        /**
          <p>
          @attr description
           The enable button text. 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:enableButtonText
        */
        public static final int EditPhoneNumberPreference_enableButtonText = 0;
        /** Attributes that can be used with a GlowPadView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #GlowPadView_allowScaling com.goodocom.rk:allowScaling}</code></td><td> Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent.</td></tr>
           <tr><td><code>{@link #GlowPadView_alwaysTrackFinger com.goodocom.rk:alwaysTrackFinger}</code></td><td> Used when the handle shouldn't wait to be hit before following the finger </td></tr>
           <tr><td><code>{@link #GlowPadView_android_gravity android:gravity}</code></td><td></td></tr>
           <tr><td><code>{@link #GlowPadView_directionDescriptions com.goodocom.rk:directionDescriptions}</code></td><td> Reference to an array resource that be used to announce the directions with targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_feedbackCount com.goodocom.rk:feedbackCount}</code></td><td> Number of waves/chevrons to show in animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_glowRadius com.goodocom.rk:glowRadius}</code></td><td> Size of target radius.</td></tr>
           <tr><td><code>{@link #GlowPadView_handleDrawable com.goodocom.rk:handleDrawable}</code></td><td> Sets a drawable as the center.</td></tr>
           <tr><td><code>{@link #GlowPadView_innerRadius com.goodocom.rk:innerRadius}</code></td><td> Inner radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRadius com.goodocom.rk:outerRadius}</code></td><td> Outer radius of glow area.</td></tr>
           <tr><td><code>{@link #GlowPadView_outerRingDrawable com.goodocom.rk:outerRingDrawable}</code></td><td> Drawable to use for wave ripple animation.</td></tr>
           <tr><td><code>{@link #GlowPadView_pointDrawable com.goodocom.rk:pointDrawable}</code></td><td> Drawble used for drawing points </td></tr>
           <tr><td><code>{@link #GlowPadView_snapMargin com.goodocom.rk:snapMargin}</code></td><td> How close we need to be before snapping to a target.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDescriptions com.goodocom.rk:targetDescriptions}</code></td><td> Reference to an array resource that be used as description for the targets around the circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_targetDrawables com.goodocom.rk:targetDrawables}</code></td><td> Reference to an array resource that be shown as targets around a circle.</td></tr>
           <tr><td><code>{@link #GlowPadView_vibrationDuration com.goodocom.rk:vibrationDuration}</code></td><td> Tactile feedback duration for actions.</td></tr>
           </table>
           @see #GlowPadView_allowScaling
           @see #GlowPadView_alwaysTrackFinger
           @see #GlowPadView_android_gravity
           @see #GlowPadView_directionDescriptions
           @see #GlowPadView_feedbackCount
           @see #GlowPadView_glowRadius
           @see #GlowPadView_handleDrawable
           @see #GlowPadView_innerRadius
           @see #GlowPadView_outerRadius
           @see #GlowPadView_outerRingDrawable
           @see #GlowPadView_pointDrawable
           @see #GlowPadView_snapMargin
           @see #GlowPadView_targetDescriptions
           @see #GlowPadView_targetDrawables
           @see #GlowPadView_vibrationDuration
         */
        public static final int[] GlowPadView = {
            0x010100af, 0x7f010006, 0x7f010007, 0x7f010008,
            0x7f010009, 0x7f01000a, 0x7f01000b, 0x7f01000c,
            0x7f01000d, 0x7f01000e, 0x7f01000f, 0x7f010010,
            0x7f010011, 0x7f010012, 0x7f010013
        };
        /**
          <p>
          @attr description
           Determine whether the glow pad is allowed to scale to fit the bounds indicated
            by its parent. If this is set to false, no scaling will occur. If this is set to true
            scaling will occur to fit for any axis in which gravity is set to center. 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:allowScaling
        */
        public static final int GlowPadView_allowScaling = 14;
        /**
          <p>
          @attr description
           Used when the handle shouldn't wait to be hit before following the finger 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:alwaysTrackFinger
        */
        public static final int GlowPadView_alwaysTrackFinger = 13;
        /**
          <p>This symbol is the offset where the {@link android.R.attr#gravity}
          attribute's value can be found in the {@link #GlowPadView} array.
          @attr name android:gravity
        */
        public static final int GlowPadView_android_gravity = 0;
        /**
          <p>
          @attr description
           Reference to an array resource that be used to announce the directions with targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:directionDescriptions
        */
        public static final int GlowPadView_directionDescriptions = 3;
        /**
          <p>
          @attr description
           Number of waves/chevrons to show in animation. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:feedbackCount
        */
        public static final int GlowPadView_feedbackCount = 12;
        /**
          <p>
          @attr description
           Size of target radius. Points within this distance of target center is a "hit". 

        <attr name="hitRadius" format="dimension"/>
        
 Radius of glow under finger. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:glowRadius
        */
        public static final int GlowPadView_glowRadius = 9;
        /**
          <p>
          @attr description
           Sets a drawable as the center. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:handleDrawable
        */
        public static final int GlowPadView_handleDrawable = 4;
        /**
          <p>
          @attr description
           Inner radius of glow area. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:innerRadius
        */
        public static final int GlowPadView_innerRadius = 7;
        /**
          <p>
          @attr description
           Outer radius of glow area. Target icons will be drawn on this circle. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:outerRadius
        */
        public static final int GlowPadView_outerRadius = 8;
        /**
          <p>
          @attr description
           Drawable to use for wave ripple animation. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:outerRingDrawable
        */
        public static final int GlowPadView_outerRingDrawable = 5;
        /**
          <p>
          @attr description
           Drawble used for drawing points 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:pointDrawable
        */
        public static final int GlowPadView_pointDrawable = 6;
        /**
          <p>
          @attr description
           How close we need to be before snapping to a target. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:snapMargin
        */
        public static final int GlowPadView_snapMargin = 11;
        /**
          <p>
          @attr description
           Reference to an array resource that be used as description for the targets around the circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:targetDescriptions
        */
        public static final int GlowPadView_targetDescriptions = 2;
        /**
          <p>
          @attr description
           Reference to an array resource that be shown as targets around a circle. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name com.goodocom.rk:targetDrawables
        */
        public static final int GlowPadView_targetDrawables = 1;
        /**
          <p>
          @attr description
           Tactile feedback duration for actions. Set to '0' for no vibration. 


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name com.goodocom.rk:vibrationDuration
        */
        public static final int GlowPadView_vibrationDuration = 10;
    };
}
